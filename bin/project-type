#!/usr/bin/env bash
CMD_BASE="$(readlink -f $0)" || CMD_BASE="$0"; CMD_BASE="$(dirname $CMD_BASE)"
for lib in base file
  do . "$CMD_BASE"/../lib/"$lib".sh; done

detect_project_type() {
  local project_root="$(readlink -f "${1:-.}")"; shift
  local ptypefun
  for ptype in ruby jvm nodejs python; do
    ptypefun="detect_project_$ptype"
    hascmd "$ptypefun" || continue
    eval "$ptypefun" && echo $ptype && return
  done
  return 1
}

detect_project_ruby() {
  test -f "${1:-.}"/Gemfile
}

get_rails_version() {
  egrep "gem 'rails', '[0-9.]+'" "${1:-.}"/Gemfile | cut -d',' -f2 | tr -d "' \n' '_'"
}

detect_project_jvm() {
  test -f "${1:-.}"/pom.xml || \
  test -f "${1:-.}"/build.gradle || \
  dir_not_empty "${1:-.}"/target/*.?ar
}

detect_project_nodejs() {
  test -f "${1:-.}"/package.json || test -f "${1:-.}"/app.js
}

detect_project_python() {
  dir_not_empty "${1:-.}"/*.py || \
  test -f "${1:-.}"/requirements.txt || \
  grep 2>/dev/null -q 'pip ' "${1:-.}"/Makefile
}

test "$DEBUG" && set -x
detect_project_type "$@"
