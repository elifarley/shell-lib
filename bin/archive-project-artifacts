#!/usr/bin/env bash
CMD_BASE="$(readlink -f "$0")" || CMD_BASE="$0"; CMD_BASE="$(dirname "$CMD_BASE")"

for lib in vcs container-img-naming
do . "$CMD_BASE"/../lib/"$lib".sh; done

build_info() {
  local CHANGESET="$(changeset)"
  set_img_vars "$IMG_REPO" "$JOB_NAME" "$BUILD_NUMBER" "$CHANGESET"

  printf 'BUILD_DATE="%s %s"\n' "$(date +'%F %T.%N')" "$(date +%Z)"
  printf "IMAGE_NAME='%s'\n" "$IMG_PREFIX_CS"
  printf "BUILD_MONIKER='%s-%.7s'\n" "${JOB_NAME:-$(id -nu)@$(hostname -s)}" "$CHANGESET"
  sed /^$/d <<-EOF
${BUILD_URL:+BUILD_URL='$BUILD_URL'}
${GIT_URL:+DVCS_URL='$GIT_URL'}
DVCS_NODE='$CHANGESET'
${GIT_BRANCH:+DVCS_BRANCH='$GIT_BRANCH'}
${PROJECT_TYPE:+PROJECT_TYPE='$PROJECT_TYPE'}
EOF
}

archive_artifacts() {
  local project_root="$(readlink -f "${1:-.}")"; shift
  local archive_target; archive_target="$(readlink -f "${1:-.}")" || {
    echo "Invalid path: '$1'"
    return 1;
  }
  shift

  test -d "$archive_target"/target && archive_target="$archive_target"/target

  adir="$(mktemp -d -p "${TMPDIR:-/tmp}" shell-lib-"$(basename "$JOB_NAME")".XXXXXXX)"
  test -d "$adir" || return 1

  build_info >> "$project_root"/build-info.txt
  local extra_tar_items; test "$*" = '.' || extra_tar_items=build-info.txt

  tar -zcvf "$adir"/app.tgz --exclude-ignore="$project_root"/.dockerignore \
    --exclude-vcs --exclude-backups --exclude-caches \
    -C "$project_root" $extra_tar_items "$@" && \
  mv "$adir"/app.tgz "$archive_target" && \
  du -hs "$archive_target"/app.tgz && \
  rm -rf "$adir" || \
  { rm -rf "$adir"; return 1 ;}

}

test "$DEBUG" && set -x
archive_artifacts "$@"
